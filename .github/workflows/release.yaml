name: Release

on:
  push:
    # On Tag / Release by Mask
    tags:
      - "v*"

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    name: Build
    uses: ./.github/workflows/build.yaml

  release:
    name: Release
    needs:
      - build
    permissions:
      contents: write

    runs-on: ubuntu-latest

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: svitlobot-healthcheck
          path: release-files

      - name: Check artifacts
        run: |
          ls -l
        working-directory: release-files

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release-files/*/*.*

  cleanup:
    name: GitHub Pages / Delete deployment
    runs-on: ubuntu-latest
    permissions: write-all
    needs:
      - build

    steps:
      - name: Delete deployment
        uses: strumwolf/delete-deployment-environment@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: svitlobot-healthcheck
          onlyRemoveDeployments: true

  publish:
    name: Publish new firmware and website to GitHub Pages
    runs-on: ubuntu-latest
    needs:
      - cleanup

    environment:
      name: svitlobot-healthcheck
      url: ${{ steps.deployment.outputs.page_url }}

    # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
    # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
    concurrency:
      group: "pages"
      cancel-in-progress: true

    steps:
      - name: Checkout website files
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: svitlobot-healthcheck
          path: release-files

      - name: Copy artifacts files
        run: |
          mkdir output
          cp -R release-files/*/* output/

      - name: Copy website files
        run: cp -R static/* output/

      - name: Check output
        run: |
          ls -l
        working-directory: output

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ github.workspace }}/output/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Delete Artifacts / Github Pages
        uses: geekyeggo/delete-artifact@v5
        with:
          name: github-pages
          failOnError: false
